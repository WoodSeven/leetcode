class Solution {
public:
    void permutation(vector<int> &num,vector<vector<int> >&ret,vector<int>&res,vector<bool>&visited)
    {
        if(num.size() == res.size())
        {
            ret.push_back(res);
            return ;
        }
        for(int i = 0;i < num.size();i++)
        {
            if(!visited[i])
            {
                visited[i] = true;
                res.push_back(num[i]);
                permutation(num,ret,res,visited);
                res.pop_back();
                visited[i] = false;
            }
        }
    }
    vector<vector<int> > permute(vector<int> &num) {
        vector<vector<int> >ret;
        vector<int>res;
        int n = num.size();
        if(!n)return ret;
        vector<bool>visited(n,false);
        sort(num.begin(),num.end());
        permutation(num,ret,res,visited);
        return ret;
    }
};
