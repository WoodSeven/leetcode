class Solution {
public:
    vector<int> twoSum(vector<int> &numbers, int target) {
        vector<int>ret;
        int len = numbers.size();
        if(len < 2)return ret;
        map<int,vector<int> >mapp;
        for(int i = 0;i < len;i++){
            mapp[numbers[i]].push_back(i);
            cout<<mapp[numbers[i]].size()<<endl;
        }
        int start = -1,end = -1,second;
        for(int i = 0;i < len;i++)
        {
            second = target - numbers[i];
            if(mapp.find(second) != mapp.end())
            {
                if(second == numbers[i] && mapp[second].size() > 1)
                {
                    start = mapp[second][0];
                    end = mapp[second][1];
                    break;
                }
                else if(second != numbers[i])
                {
                    start = i;
                    break;
                }
            }
        }
        if(end == -1)
        {
             for(int i = 0;i < len;i++)
             {
                 if(target - numbers[start] == numbers[i])
                 {
                     end = i;
                     break;
                 }
             }
        }
        if(start < end)
        {
            ret.push_back(start+1);
            ret.push_back(end+1);
        }
        else
        {
            ret.push_back(end+1);
            ret.push_back(start+1);
        }
    }
};
