/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<vector<int> > levelOrderBottom(TreeNode *root) {
        vector<vector<int> >ret;
        stack<vector<int> >st;
        if(!root)return ret;
        vector<int>res;
        queue<TreeNode*>q;
        q.push(root);
        int num = 1;
        while(!q.empty())
        {
            TreeNode* node = q.front();
            q.pop();
            if(node ->left)q.push(node ->left);
            if(node ->right)q.push(node ->right);
            res.push_back(node ->val);
            if(--num == 0)
            {
                st.push(res);
                num = q.size();
                res.clear();
            }
        }
        while(!st.empty())
        {
            ret.push_back(st.top());
            st.pop();
        }
        return ret;
    }
};
