/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* merge(ListNode* head1,ListNode* head2)
    {
        if(head1 == NULL)return head2;
        else if(head2 == NULL)return head1;
        ListNode* dummy = new ListNode(1),*pNode = dummy,*pNode1 = head1,*pNode2 = head2;
        while(pNode1 != NULL && pNode2 != NULL)
        {
            if(pNode1->val <= pNode2->val)
            {
                pNode ->next = pNode1;
                pNode1 = pNode1 ->next;
            }
            else
            {
                pNode ->next = pNode2;
                pNode2 = pNode2 ->next;
            }
            pNode = pNode ->next;
        }
        if(pNode1 != NULL)pNode ->next = pNode1;
        if(pNode2 != NULL)pNode ->next = pNode2;
        pNode = dummy ->next;
        delete(dummy);
        return pNode;
    }
    ListNode *sortList(ListNode *head) {
        if(head == NULL || head ->next == NULL)return head;
        ListNode* dummy = new ListNode(1),*fast = dummy,*slow = dummy;
        dummy ->next = head;
        while(fast != NULL && fast ->next != NULL)
        {
            slow = slow ->next;
            fast = fast ->next ->next;
        }
        fast = slow ->next;
        slow ->next = NULL;
        fast = sortList(fast);
        slow = sortList(head);
        delete(dummy);
        return merge(fast,slow);
    }
};
