class Solution {
public:
    vector<int> twoSum(vector<int> &numbers, int target) {
        vector<int>ret;
        int len = numbers.size();
        if(len < 2)return ret;
        int start = -1,end = -1;
        set<int>sets;
        for(int i = 0;i < len;i++)
        {
            if(sets.find(numbers[i]) != sets.end() && numbers[i] * 2 == target)
            {
                start = i;
                break;
            }
            sets.insert(numbers[i]);
        }
        if(start == -1)
        {
            for(int i = 0;i < len;i++)
            {
                sets.erase(numbers[0]);//like {3,2,4},target-numbers[0] == numbers[0]
                if(sets.find(target - numbers[i]) != sets.end())
                {
                    start = i;
                    break;
                }
                sets.insert(numbers[0]);
            }
        }
        for(int i = 0;i < len;i++)
        {
            if(target - numbers[start] == numbers[i])
            {
                end = i;
                break;
            }
        }
        if(start < end)
        {
            ret.push_back(start+1);
            ret.push_back(end+1);
        }
        else
        {
            ret.push_back(end+1);
            ret.push_back(start+1);
        }
        return ret;
    }
};
