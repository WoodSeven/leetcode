/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<vector<int> > zigzagLevelOrder(TreeNode *root) {
        vector<vector<int> >ret;
        if(!root)return ret;
        queue<TreeNode*>q;
        int cur = 1,num = 1;
        q.push(root);
        vector<int>res;
        while(!q.empty())
        {
            TreeNode* pNode = q.front();
            q.pop();
            num--;
            res.push_back(pNode ->val);
            if(pNode ->left)q.push(pNode->left);
            if(pNode ->right)q.push(pNode ->right);
            if(!num)
            {
                if(cur & 0x1)
                    ret.push_back(res);
                else
                {
                    stack<int>st;
                    for(int i = 0;i < res.size();i++)
                        st.push(res[i]);
                    res.clear();
                    while(!st.empty())
                    {
                        res.push_back(st.top());
                        st.pop();
                    }
                    ret.push_back(res);
                }
                res.clear();
                cur++;
                num = q.size();
            }
        }
        return ret;
    }
};
