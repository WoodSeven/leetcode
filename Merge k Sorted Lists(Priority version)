/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *mergeKLists(vector<ListNode *> &lists) {
        int len = lists.size();
        if(len == 0)return NULL;
        if(len == 1)return lists[0];
        priority_queue<int,vector<int>,greater<int> >q;
        ListNode * dummy = new ListNode(0),*p = NULL;
        dummy ->next = NULL;
        
        for(int i = 0;i < len;i++)
            if(lists[i])
            {
                p = lists[i];
                while(p)
                {
                    q.push(p ->val);
                    p = p ->next;
                }
            }
        
        if(q.empty())return NULL;
        p = dummy;        
        while(!q.empty())
        {
            p ->next = new ListNode(q.top());
            q.pop();
            p = p ->next;
        }
        p ->next = NULL;
        p = dummy ->next;
        delete(dummy);
        return p;
    }
};
