class Solution {
public:
    int minimumTotal(vector<vector<int> > &triangle) {
        int n = triangle.size();
        vector<vector<int> >dp(n);
        for(int i = 0;i < n;i++){
            dp[i].resize(triangle[i].size());
            for(int k = 0;k < triangle[i].size();k++)
                dp[i][k] = INT_MAX;
        }
        dp[0][0] = triangle[0][0];
        for(int i = 1;i < n;i++)
        {
            for(int j = 0;j < triangle[i].size();j++)
            {
                if(j == 0)dp[i][j] = min(dp[i-1][j]+triangle[i][j],dp[i][j]);
                else if(j == triangle[i].size()-1)dp[i][j] = min(dp[i-1][j-1]+triangle[i][j],dp[i][j]);
                else
                {
                    int temp = min(dp[i-1][j],dp[i-1][j-1]);
                    dp[i][j] = min(dp[i][j],temp+triangle[i][j]);
                }
            }
        }
        int ret = INT_MAX;
        for(int i = 0;i < triangle[n-1].size();i++)
            ret = min(ret,dp[n-1][i]);
        return ret;
    }
};
