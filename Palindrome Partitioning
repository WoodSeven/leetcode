class Solution {
public:
    bool isPalindrome(string stemp)
    {
        if(stemp.size() == 1)return true;
        int first = 0,second = stemp.size()-1;
        while(first < second)
        {
            if(stemp[first] != stemp[second])return false;
            first++;
            second--;
        }
        return true;
    }
    void Palindrome(vector<vector<string> >&res,vector<string>ret,string s)
    {
        if(s == "")
        {
            res.push_back(ret);
            return;
        }
        for(int i = 0;i < s.size();i++)
        {
            string stemp = s.substr(0,i+1);
            if(isPalindrome(stemp))
            {
                ret.push_back(stemp);
                Palindrome(res,ret,s.substr(i+1));
                ret.pop_back();
            }
        }
    }
    vector<vector<string>> partition(string s) {
        vector<vector<string> >res;
        vector<string>ret;
        if(s.size() == 0)return res;
        Palindrome(res,ret,s);
        return res;
    }
};
