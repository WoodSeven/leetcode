/**
 * Definition for an interval.
 * struct Interval {
 *     int start;
 *     int end;
 *     Interval() : start(0), end(0) {}
 *     Interval(int s, int e) : start(s), end(e) {}
 * };
 */
class Solution {
public:
    vector<Interval> insert(vector<Interval> &intervals, Interval newInterval) {
        vector<Interval>ret;
        int len = intervals.size();
        int start = newInterval.start,end = newInterval.end,i = 0;
        
        for(;i < len && start > intervals[i].end;i++)
            ret.push_back(intervals[i]);
            
        if(i < len)
            start = min(start,intervals[i].start);
            
        for(;i < len && end >= intervals[i].start;i++)
            end = max(end,intervals[i].end);
            
        ret.push_back(Interval(start,end));
        ret.insert(ret.end(),intervals.begin()+i,intervals.end());
        return ret;
    }
};
