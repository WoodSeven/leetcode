class Solution {
public:
    int canCompleteCircuit(vector<int> &gas, vector<int> &cost) {
        if(gas.size() == 0 || cost.size() == 0 || gas.size() != cost.size() ||gas.size()==1 && (gas[0] - cost[0] < 0))return -1;
        int n = gas.size();
        vector<int>dp(n);
        for(int i = 0;i < n;i++)
            dp[i] = gas[i] - cost[i];
        int sum = dp[n-1],first = 0,start = n-1;
        while(first < start)
        {
            while(first < start && sum >= 0)
            {
                sum += dp[first];
                first++;            
            }
            while(first < start && sum < 0)
            {
                start--;
                sum += dp[start];
            }
            if(sum < 0)return -1;
        }
        return start;
    }
};
